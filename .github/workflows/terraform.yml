name: "Terraform - Azure VM Deployment"

on:
  # Manual trigger with an input parameter
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action to perform"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

env:
  TF_WORKING_DIR: ./terraform-resources

jobs:
  terraform:
    name: "Terraform ${{ github.event.inputs.action }}"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  # Required for OIDC authentication to Azure

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Configure Azure Login using GitHub OIDC (recommended way)
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5  # You can adjust as needed

      # Initialize Terraform backend
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false

      # Validate configuration
      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      # Plan phase (always runs first)
      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -input=false -out=tfplan

      # Apply phase (only if chosen)
      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan

      # Destroy phase (only if chosen)
      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform destroy -auto-approve
