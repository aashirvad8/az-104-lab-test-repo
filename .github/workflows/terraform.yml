name: "Terraform Apply/Destroy with Azure OIDC"

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose Terraform action"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy
      email_prefix:
        description: "Email prefix (used for RG & VNET name)"
        required: true
        default: "demo"
      location:
        description: "Azure region"
        required: true
        default: "eastus"

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: ./terraform-resources

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: 🔐 Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: 🌍 Set Azure environment variables for Terraform
        run: |
          echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ vars.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ vars.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ vars.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: 🧾 Inject dynamic terraform.tfvars
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          echo "email_prefix = \"${{ github.event.inputs.email_prefix }}\"" > terraform.tfvars
          echo "location     = \"${{ github.event.inputs.location }}\"" >> terraform.tfvars
          echo "subscription_id = \"${{ vars.AZURE_SUBSCRIPTION_ID }}\"" >> terraform.tfvars
          echo "✅ Generated terraform.tfvars:"
          cat terraform.tfvars

      - name: 🧱 Terraform Init (Backend per user)
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init \
            -backend-config="resource_group_name=tfstate-rg" \
            -backend-config="storage_account_name=tfstatestgacfortesting" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=${{ github.event.inputs.email_prefix }}-terraform.tfstate"

      - name: ✅ Terraform Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      - name: 🚀 Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve -input=false

      - name: 💣 Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform destroy -auto-approve -input=false

      - name: 🧹 Cleanup generated tfvars
        if: always()
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: rm -f terraform.tfvars
