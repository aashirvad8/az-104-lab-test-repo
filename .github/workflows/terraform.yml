jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Set Azure environment variables for Terraform
        run: |
          echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ vars.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ vars.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ vars.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Terraform Init
        working-directory: ./terraform-resources
        run: |
          terraform init \
            -backend-config="resource_group_name=tfstate-rg" \
            -backend-config="storage_account_name=tfstatejayesh4890patil1" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Plan
        working-directory: ./terraform-resources
        run: terraform plan

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: ./terraform-resources
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: ./terraform-resources
        run: terraform destroy -auto-approve
