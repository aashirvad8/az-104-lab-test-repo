name: "Terraform Apply / Destroy"

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Select Terraform action"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

env:
  ARM_USE_OIDC: true
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  TF_IN_AUTOMATION: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform-resources

    steps:
      # ----------------------------
      # 1️⃣ Checkout the repo
      # ----------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # ----------------------------
      # 2️⃣ Authenticate to Azure using OIDC
      # ----------------------------
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ----------------------------
      # 3️⃣ Setup Terraform
      # ----------------------------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      # ----------------------------
      # 4️⃣ Initialize local backend (bootstrap mode)
      # ----------------------------
      - name: Terraform Init (Remote Backend)
        run: terraform init -reconfigure

      # ----------------------------
      # 5️⃣ Create Backend Resources (Storage Account, Container)
      # ----------------------------
      - name: Terraform Apply (Backend Storage)
        run: terraform apply -auto-approve -target=azurerm_storage_account.backend_sa -target=azurerm_storage_container.backend_container

      # ----------------------------
      # 6️⃣ Re-initialize with Remote Backend (Azure Storage)
      # ----------------------------
      - name: Terraform Init (Remote Backend)
        run: |
          terraform init -reconfigure \
            -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RG }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_SA }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER }}" \
            -backend-config="key=terraform.tfstate"

      # ----------------------------
      # 7️⃣ Validate and Format Check
      # ----------------------------
      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      # ----------------------------
      # 8️⃣ Terraform Plan & Apply / Destroy
      # ----------------------------
      - name: Terraform Plan and Apply/Destroy
        run: |
          case "${{ github.event.inputs.action }}" in
            apply)
              echo "Running terraform plan..."
              terraform plan -out=tfplan
              echo "Applying Terraform changes..."
              terraform apply -auto-approve tfplan
              ;;
            destroy)
              echo "Running terraform destroy..."
              terraform plan -destroy -out=tfplan
              terraform apply -auto-approve tfplan
              ;;
            *)
              echo "Invalid action specified"
              exit 1
              ;;
          esac
